{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/admin-home/admin-home.component.ts","./src/app/component/admin-home/admin-home.component.html","./src/app/component/admin-parameters/admin-parameters.component.ts","./src/app/component/admin-parameters/admin-parameters.component.html","./src/app/component/admin-payments/admin-payments.component.ts","./src/app/component/admin-payments/admin-payments.component.html","./src/app/component/admin-technologies/admin-technologies.component.ts","./src/app/component/admin-technologies/admin-technologies.component.html","./src/app/component/admin-users/admin-users.component.ts","./src/app/component/admin-users/admin-users.component.html","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/component/mentor-comptrainings/mentor-comptrainings.component.ts","./src/app/component/mentor-comptrainings/mentor-comptrainings.component.html","./src/app/component/mentor-curtrainings/mentor-curtrainings.component.ts","./src/app/component/mentor-curtrainings/mentor-curtrainings.component.html","./src/app/component/mentor-home/mentor-home.component.ts","./src/app/component/mentor-home/mentor-home.component.html","./src/app/component/mentor-notifications/mentor-notifications.component.ts","./src/app/component/mentor-notifications/mentor-notifications.component.html","./src/app/component/mentor-skills/mentor-skills.component.ts","./src/app/component/mentor-skills/mentor-skills.component.html","./src/app/component/user-comptrainings/user-comptrainings.component.ts","./src/app/component/user-comptrainings/user-comptrainings.component.html","./src/app/component/user-curtrainings/user-curtrainings.component.ts","./src/app/component/user-curtrainings/user-curtrainings.component.html","./src/app/component/user-home/user-home.component.ts","./src/app/component/user-home/user-home.component.html","./src/app/component/user-notifications/user-notifications.component.ts","./src/app/component/user-notifications/user-notifications.component.html","./src/app/component/user-search/user-search.component.ts","./src/app/component/user-search/user-search.component.html","./src/app/model/Payment.ts","./src/app/model/Technology.ts","./src/app/model/mentor.ts","./src/app/model/notification.ts","./src/app/model/parameter.ts","./src/app/model/skill.ts","./src/app/model/training.ts","./src/app/model/user.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './component/login/login.component';\nimport { UserHomeComponent } from './component/user-home/user-home.component';\nimport { MentorHomeComponent } from './component/mentor-home/mentor-home.component';\nimport { UserSearchComponent } from './component/user-search/user-search.component';\nimport { UserNotificationsComponent } from './component/user-notifications/user-notifications.component';\nimport { UserCurtrainingsComponent } from './component/user-curtrainings/user-curtrainings.component';\nimport { UserComptrainingsComponent } from './component/user-comptrainings/user-comptrainings.component';\nimport { MentorNotificationsComponent } from './component/mentor-notifications/mentor-notifications.component';\nimport { MentorCurtrainingsComponent } from './component/mentor-curtrainings/mentor-curtrainings.component';\nimport { MentorComptrainingsComponent } from './component/mentor-comptrainings/mentor-comptrainings.component';\nimport { MentorSkillsComponent } from './component/mentor-skills/mentor-skills.component';\nimport { AdminHomeComponent } from './component/admin-home/admin-home.component';\nimport { AdminUsersComponent } from './component/admin-users/admin-users.component';\nimport { AdminPaymentsComponent } from './component/admin-payments/admin-payments.component';\nimport { AdminParametersComponent } from './component/admin-parameters/admin-parameters.component';\nimport { AdminTechnologiesComponent } from './component/admin-technologies/admin-technologies.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'user-home', component: UserHomeComponent },\n  { path: 'user-search', component: UserSearchComponent },\n  { path: 'user-notifications', component: UserNotificationsComponent },\n  { path: 'user-curtrainings', component: UserCurtrainingsComponent },\n  { path: 'user-comptrainings', component: UserComptrainingsComponent },\n  { path: 'mentor-home', component: MentorHomeComponent },\n  { path: 'mentor-notifications', component: MentorNotificationsComponent },\n  { path: 'mentor-curtrainings', component: MentorCurtrainingsComponent },\n  { path: 'mentor-comptrainings', component: MentorComptrainingsComponent },\n  { path: 'mentor-skills', component: MentorSkillsComponent },\n  { path: 'admin-technologies', component: AdminTechnologiesComponent },\n  { path: 'admin-users', component: AdminUsersComponent },\n  { path: 'admin-payments', component: AdminPaymentsComponent },\n  { path: 'admin-home', component: AdminHomeComponent },\n  { path: 'admin-parameters', component: AdminParametersComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { enableTracing: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Mentor On Demand';\n}\n","<!-- app.component.ts -->\n<div style=\"text-align:center\">\n  <h1>\n    Welcome to {{ title }}!\n  </h1>\n</div>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { UserHomeComponent } from './component/user-home/user-home.component';\nimport { MentorHomeComponent } from './component/mentor-home/mentor-home.component';\nimport { UserCurtrainingsComponent } from './component/user-curtrainings/user-curtrainings.component';\nimport { UserComptrainingsComponent } from './component/user-comptrainings/user-comptrainings.component';\nimport { MentorCurtrainingsComponent } from './component/mentor-curtrainings/mentor-curtrainings.component';\nimport { MentorComptrainingsComponent } from './component/mentor-comptrainings/mentor-comptrainings.component';\nimport { UserNotificationsComponent } from './component/user-notifications/user-notifications.component';\nimport { MentorNotificationsComponent } from './component/mentor-notifications/mentor-notifications.component';\nimport { MentorSkillsComponent } from './component/mentor-skills/mentor-skills.component';\nimport { UserSearchComponent } from './component/user-search/user-search.component';\nimport { AdminHomeComponent } from './component/admin-home/admin-home.component';\nimport { AdminTechnologiesComponent } from './component/admin-technologies/admin-technologies.component';\nimport { AdminUsersComponent } from './component/admin-users/admin-users.component';\nimport { AdminPaymentsComponent } from './component/admin-payments/admin-payments.component';\nimport { AdminParametersComponent } from './component/admin-parameters/admin-parameters.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserHomeComponent,\n    MentorHomeComponent,\n    UserCurtrainingsComponent,\n    UserComptrainingsComponent,\n    MentorCurtrainingsComponent,\n    MentorComptrainingsComponent,\n    UserNotificationsComponent,\n    MentorNotificationsComponent,\n    MentorSkillsComponent,\n    UserSearchComponent,\n    AdminHomeComponent,\n    AdminTechnologiesComponent,\n    AdminUsersComponent,\n    AdminPaymentsComponent,\n    AdminParametersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  userName = JSON.parse(localStorage.getItem('loggedUser'))['name'];\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Welcome {{userName}} login in system!</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Parameter } from 'src/app/model/parameter';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-parameters',\n  templateUrl: './admin-parameters.component.html',\n  styleUrls: ['./admin-parameters.component.css']\n})\nexport class AdminParametersComponent implements OnInit {\n  paraForm;\n  items;\n  submitted = true;\n  paras: Array<Parameter> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\n    this.paraForm = this.formBuilder.group({\n      commission: ''\n    });\n  }\n\n  ngOnInit(): void {\n    this.items = this.getParameters();\n  }\n\n  onSubmit(data) {\n    let para = new Parameter();\n    para.perCommissionPayment = data[\"commission\"];\n    para.id = 1;\n\n    this.http.post<any>('api/parameter/update',\n      para,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Save parameter successfully!\");\n\n          this.getParameters();\n          this.submitted = true;\n        } else {\n          alert('Sorry,save parameter fail!')\n        }\n      });\n\n    this.submitted = true;\n  }\n\n  getParameters() {\n    this.paras = [];\n    this.http.get('api/parameters',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let para = new Parameter();\n          para.id = element[\"id\"];\n          para.perCommissionPayment = element[\"perCommissionPayment\"];\n\n          this.paras.push(para);\n        });\n        this.items = this.paras;\n      });\n  }\n\n\n  onUpdate() {\n    this.submitted = false;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Parameters Management</p>\n            <div [hidden]=\"submitted\">\n                <form [formGroup]=\"paraForm\" (ngSubmit)=\"onSubmit(paraForm.value)\">\n                    <div class=\"form-group\">\n                        <label for=\"commission\">Payment Commission percentage:</label>\n                        <input class=\"form-control\" type=\"text\" id=\"commission\" formControlName=\"commission\">\n                    </div>\n                    <button class=\"btn btn-primary\" type=\"submit\">Save</button>\n                </form>\n            </div>\n            <div [hidden]=\"!submitted\">\n                <table class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Payment Commission Percentage</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let para of items\">\n                            <td><span>{{para.id}}</span></td>\n                            <td><span>{{para.perCommissionPayment}}</span></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"onUpdate()\">Update</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Payment } from 'src/app/model/Payment';\n\n@Component({\n  selector: 'app-admin-payments',\n  templateUrl: './admin-payments.component.html',\n  styleUrls: ['./admin-payments.component.css']\n})\nexport class AdminPaymentsComponent implements OnInit {\n  items;\n  payments: Array<Payment> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.items = this.getPayments();\n  }\n\n  getPayments() {\n    this.payments = [];\n    this.http.get('api/payments',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let payment = new Payment();\n          payment.userName = element[\"userName\"];\n          payment.trainingName = element[\"trainingName\"];\n          payment.mentorName = element[\"mentorName\"];\n          payment.amount = element[\"amount\"];\n          payment.id = element[\"id\"];\n\n          this.payments.push(payment);\n        });\n        this.items = this.payments;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Payments Management</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>User Name</th>\n                        <th>Mentor Name</th>\n                        <th>Training</th>\n                        <th>Amount</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let payment of items\">\n                        <td><span>{{payment.id}}</span></td>\n                        <td><span>{{payment.userName}}</span></td>\n                        <td><span>{{payment.mentorName}}</span></td>\n                        <td><span>{{payment.trainingName}}</span></td>\n                        <td><span>{{payment.amount}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Technology } from 'src/app/model/Technology';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-technologies',\n  templateUrl: './admin-technologies.component.html',\n  styleUrls: ['./admin-technologies.component.css']\n})\nexport class AdminTechnologiesComponent implements OnInit {\n  items;\n  techForm;\n  submitted = true;\n  technologies: Array<Technology> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\n    this.techForm = this.formBuilder.group({\n      name: ''\n    });\n  }\n\n  ngOnInit(): void {\n    this.items = this.getTechnologies();\n  }\n  onAddTech() {\n    this.submitted = false;\n  }\n\n  onRemoveTech(data) {\n    //window.alert(id);\n    this.http.delete<any>('api/technology/remove?techId=' + data[\"id\"],\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Remove technology successfully!\");\n\n          this.getTechnologies();\n          this.submitted = true;\n        } else {\n          alert('Sorry,remove technology fail!')\n        }\n      });\n  }\n\n  getTechnologies() {\n    this.technologies = [];\n    this.http.get('api/technologies',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let technology = new Technology();\n          technology.name = element[\"name\"];\n          technology.id = element[\"id\"];\n\n          this.technologies.push(technology);\n        });\n        this.items = this.technologies;\n      });\n  }\n\n  onSubmit(data) {\n    //console.log(data);\n    let tech = new Technology();\n    tech.name = data[\"name\"];\n\n    this.http.post<any>('api/technology/add',\n      tech,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Add technology successfully!\");\n\n          this.getTechnologies();\n          this.submitted = true;\n        } else {\n          alert('Sorry,add technology fail!')\n        }\n      });\n\n    this.submitted = true;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Technologies Management</p>\n            <div [hidden]=\"submitted\">\n                <form [formGroup]=\"techForm\" (ngSubmit)=\"onSubmit(techForm.value)\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Technology Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" required formControlName=\"name\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n            <div [hidden]=\"!submitted\">\n                <table class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let tech of items\">\n                            <td><span>{{tech.id}}</span></td>\n                            <td><span>{{tech.name}}</span></td>\n                            <td><button class=\"btn btn-danger\" type=\"button\"\n                                    (click)=\"onRemoveTech(tech)\">Remove</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddTech()\">Add</button>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'app-admin-users',\n  templateUrl: './admin-users.component.html',\n  styleUrls: ['./admin-users.component.css']\n})\nexport class AdminUsersComponent implements OnInit {\n  items\n  users: Array<User> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.items = this.getUsers();\n  }\n\n  onBlock(user) {\n    //window.alert(id);\n    this.http.post<any>('api/user/block?userId=' + user.id,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"This user has been blocked!\");\n\n          this.getUsers();\n        } else {\n          alert('Sorry,block user fail!')\n        }\n      });\n  }\n\n  onUnBlock(user: User) {\n    //window.alert(id);\n    this.http.post<any>('api/user/unblock?userId=' + user.id,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"This user has been unblocked!\");\n\n          this.getUsers();\n        } else {\n          alert('Sorry,unblock user fail!')\n        }\n      });\n  }\n\n  getUsers() {\n    this.users = [];\n    this.http.get('api/users',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let user = new User();\n          user.name = element[\"name\"];\n          user.id = element[\"id\"];\n          user.role = element[\"role\"];\n          user.status = element[\"status\"];\n          this.users.push(user);\n        });\n        this.items = this.users;\n      });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Users and Mentors Management</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Role</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of items\">\n                        <td><span>{{user.id}}</span></td>\n                        <td><span>{{user.name}}</span></td>\n                        <td><span>{{user.role}}</span></td>\n                        <td><span>{{user.status}}</span></td>\n                        <td><button class=\"btn btn-danger\" type=\"button\"\n                                (click)=\"onBlock(user)\">Block</button>&nbsp;&nbsp;\n                            <button class=\"btn btn-success\" type=\"button\" (click)=\"onUnBlock(user)\">Unblock</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/model/user';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private http: HttpClient\n  ) {\n    this.loginForm = this.formBuilder.group({\n      name: '',\n      password: ''\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n  onSubmit(userData) {\n    this.http.post<any>('api/user/login',\n      userData,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        if (res.status == 'success') {\n          localStorage.setItem('loggedUser', JSON.stringify(res.data))\n          if (res.data.role == \"admin\") {\n            this.router.navigateByUrl(\"admin-home\")\n          } else if (res.data.role == \"mentor\") {\n            this.router.navigateByUrl(\"mentor-home\")\n          } else {\n            this.router.navigateByUrl(\"user-home\")\n          }\n        } else {\n          alert('username or password is wrong')\n        }\n      });\n  }\n}\n","<div class=\"container\">\n    <h1>Sign in</h1>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n        <div class=\"form-group\">\n            <label for=\"name\">User Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" required formControlName=\"name\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" required formControlName=\"password\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Sign in</button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Training } from 'src/app/model/training';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-mentor-comptrainings',\n  templateUrl: './mentor-comptrainings.component.html',\n  styleUrls: ['./mentor-comptrainings.component.css']\n})\nexport class MentorComptrainingsComponent implements OnInit {\n  items;\n  trainings: Array<Training> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getCompletedTrainings();\n  }\n\n  getCompletedTrainings() {\n    this.trainings = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/mentor/trainings?userId=' + userId + '&trainingStatus=completed',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let training = new Training();\n          training.name = element[\"name\"];\n          training.id = element[\"id\"];\n          training.mentorId = element[\"mentorId\"];\n          training.userId = element[\"userId\"];\n          training.ratings = element[\"ratings\"];\n          training.state = element[\"state\"];\n          this.trainings.push(training);\n        });\n        this.items = this.trainings;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Completed Trainings</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Training ID</th>\n                        <th>Training Name</th>\n                        <th>State</th>\n                        <th>Ratings</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let training of items\">\n                        <td><span>{{training.id}}</span></td>\n                        <td><span>{{training.name}}</span></td>\n                        <td><span>{{training.state}}</span></td>\n                        <td><span>{{training.ratings}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Training } from 'src/app/model/training';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-mentor-curtrainings',\n  templateUrl: './mentor-curtrainings.component.html',\n  styleUrls: ['./mentor-curtrainings.component.css']\n})\nexport class MentorCurtrainingsComponent implements OnInit {\n  items;\n  trainings: Array<Training> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getCurrentTrainings();\n  }\n\n  getCurrentTrainings() {\n    this.trainings = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/mentor/trainings?userId=' + userId + '&trainingStatus=progress',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let training = new Training();\n          training.name = element[\"name\"];\n          training.id = element[\"id\"];\n          training.mentorId = element[\"mentorId\"];\n          training.userId = element[\"userId\"];\n          training.ratings = element[\"ratings\"];\n          training.state = element[\"state\"];\n          this.trainings.push(training);\n        });\n        this.items = this.trainings;\n      });\n  }\n\n  onConfirm(training: Training) {\n    this.http.post<any>('api/training/confirm',\n      training,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        if (res == true) {\n          window.alert(\"The training proposal has been confirmed!\")\n        } else {\n          alert('Sorry,Confirm Proposal fail!')\n        }\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Current Trainings</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Training ID</th>\n                        <th>Training Name</th>\n                        <th>State</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let training of items\">\n                        <td><span>{{training.id}}</span></td>\n                        <td><span>{{training.name}}</span></td>\n                        <td><span>{{training.state}}</span></td>\n                        <td><button type=\"button\" class=\"btn btn-primary\" (click)=\"onConfirm(training)\">Confirm\n                                Proposal</button></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mentor-home',\n  templateUrl: './mentor-home.component.html',\n  styleUrls: ['./mentor-home.component.css']\n})\nexport class MentorHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  userName = JSON.parse(localStorage.getItem('loggedUser'))['name'];\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Welcome {{userName}} login in system!</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Notification } from 'src/app/model/notification';\n\n@Component({\n  selector: 'app-mentor-notifications',\n  templateUrl: './mentor-notifications.component.html',\n  styleUrls: ['./mentor-notifications.component.css']\n})\nexport class MentorNotificationsComponent implements OnInit {\n  items;\n  notifications: Array<Notification> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getNotifications();\n  }\n\n  getNotifications() {\n    this.notifications = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/user/notifications?userId=' + userId,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let notification = new Notification();\n          notification.title = element[\"title\"];\n          notification.id = element[\"id\"];\n          notification.userId = element[\"userId\"];\n          notification.content = element[\"content\"];\n          this.notifications.push(notification);\n        });\n        this.items = this.notifications;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Notifications Center</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Title</th>\n                        <th>Content</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let notification of items\">\n                        <td><span>{{notification.id}}</span></td>\n                        <td><span>{{notification.title}}</span></td>\n                        <td><span>{{notification.content}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Mentor } from 'src/app/model/mentor';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Training } from 'src/app/model/training';\nimport { Skill } from 'src/app/model/skill';\n\n@Component({\n  selector: 'app-mentor-skills',\n  templateUrl: './mentor-skills.component.html',\n  styleUrls: ['./mentor-skills.component.css']\n})\nexport class MentorSkillsComponent implements OnInit {\n  msForm;\n  items;\n  submitted = true;\n  mentors: Array<Mentor> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n  technologies = ['IT'];\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\n    this.msForm = this.formBuilder.group({\n      name: '',\n      techName: '',\n      years: '',\n      totalDelivered: ''\n    });\n  }\n\n  ngOnInit(): void {\n    this.getMentorSkills();\n  }\n\n  getMentorSkills() {\n    this.mentors = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id'];\n    this.http.get('api/mentor/skills/?userId=' + userId,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let mentor = new Mentor();\n          mentor.name = element[\"mentorName\"];\n          mentor.id = element[\"mentorId\"];\n          mentor.skillName = element[\"name\"];\n          mentor.technology = element[\"techName\"];\n          mentor.experience = element[\"years\"];\n          mentor.totalDelivered = element[\"totalDelivered\"];\n          mentor.techId = element[\"techId\"];\n          this.mentors.push(mentor);\n        });\n        this.items = this.mentors;\n      });\n  }\n\n  onAddSkill() {\n    this.submitted = false;\n  }\n\n  onSubmit(data) {\n    //console.log(data);\n    let skill = new Skill();\n    skill.name = data[\"name\"];\n    skill.mentorId = JSON.parse(localStorage.getItem('loggedUser'))['id'];\n    skill.techId = 1;\n    skill.techName = data[\"techName\"];\n    skill.years = data[\"years\"];\n    skill.totalDelivered = data[\"totalDelivered\"];\n\n    this.http.post<any>('api/mentor/addskill',\n      skill,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Add skill successfully!\");\n\n          this.getMentorSkills();\n          this.submitted = true;\n        } else {\n          alert('Sorry,add skill fail!')\n        }\n      });\n\n    this.submitted = true;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <div [hidden]=\"submitted\">\n                <form [formGroup]=\"msForm\" (ngSubmit)=\"onSubmit(msForm.value)\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Skill Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" required formControlName=\"name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"techName\">Technology</label>\n                        <select class=\"form-control\" id=\"techName\" formControlName=\"techName\">\n                            <option *ngFor=\"let p of technologies\" [value]=\"p\">{{p}}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"years\">Years Of Experience</label>\n                        <input type=\"text\" class=\"form-control\" id=\"years\" required formControlName=\"years\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"totalDelivered\">Total Delivered</label>\n                        <input type=\"text\" class=\"form-control\" id=\"totalDelivered\" required\n                            formControlName=\"totalDelivered\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n            <div [hidden]=\"!submitted\">\n                <table class=\"table table-striped table-bordered table-hover\" *ngIf=\"items\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Technology</th>\n                            <th>Years Of Experience</th>\n                            <th>Total Delivered</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let skill of items\">\n                            <td><span>{{skill.skillName}}</span></td>\n                            <td><span>{{skill.technology}}</span></td>\n                            <td><span>{{skill.experience}}</span></td>\n                            <td><span>{{skill.totalDelivered}}</span></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Training } from 'src/app/model/training';\n\n@Component({\n  selector: 'app-user-comptrainings',\n  templateUrl: './user-comptrainings.component.html',\n  styleUrls: ['./user-comptrainings.component.css']\n})\nexport class UserComptrainingsComponent implements OnInit {\n  items;\n  trainings: Array<Training> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getCompletedTrainings();\n  }\n\n  getCompletedTrainings() {\n    this.trainings = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/user/trainings?userId=' + userId + '&trainingStatus=completed',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let training = new Training();\n          training.name = element[\"name\"];\n          training.id = element[\"id\"];\n          training.mentorId = element[\"mentorId\"];\n          training.ratings = element[\"ratings\"];\n          training.state = element[\"state\"];\n          this.trainings.push(training);\n        });\n        this.items = this.trainings;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Completed Trainings</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Training ID</th>\n                        <th>Training Name</th>\n                        <th>State</th>\n                        <th>Ratings</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let training of items\">\n                        <td><span>{{training.id}}</span></td>\n                        <td><span>{{training.name}}</span></td>\n                        <td><span>{{training.state}}</span></td>\n                        <td><span>{{training.ratings}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Training } from 'src/app/model/training';\n\n@Component({\n  selector: 'app-user-curtrainings',\n  templateUrl: './user-curtrainings.component.html',\n  styleUrls: ['./user-curtrainings.component.css']\n})\nexport class UserCurtrainingsComponent implements OnInit {\n  items;\n  trainings: Array<Training> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getCurrentTrainings();\n  }\n\n  getCurrentTrainings() {\n    this.trainings = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/user/trainings?userId=' + userId + '&trainingStatus=progress',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let training = new Training();\n          training.name = element[\"name\"];\n          training.id = element[\"id\"];\n          training.mentorId = element[\"mentorId\"];\n          training.userId = element[\"userId\"];\n          training.ratings = element[\"ratings\"];\n          training.state = element[\"state\"];\n          this.trainings.push(training);\n        });\n        this.items = this.trainings;\n      });\n  }\n\n  onPayment(training: Training) {\n\n    this.http.post<any>('api/training/payment',\n      training,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        if (res == true) {\n          window.alert(\"Your payment is completed!\")\n        } else {\n          alert('Sorry,the payment is fail!')\n        }\n      });\n  }\n\n  onRating(training: Training) {\n    training.ratings = 8.8;\n\n    this.http.post<any>('api/training/rating',\n      training,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        if (res == true) {\n          window.alert(\"Thanks for rating this training!\")\n        } else {\n          alert('Sorry,the rating is fail!')\n        }\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Current Trainings</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Training ID</th>\n                        <th>Training Name</th>\n                        <th>State</th>\n                        <th>Ratings</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let training of items\">\n                        <td><span>{{training.id}}</span></td>\n                        <td><span>{{training.name}}</span></td>\n                        <td><span>{{training.state}}</span></td>\n                        <td><span>{{training.ratings}}</span></td>\n                        <td><button type=\"button\" class=\"btn btn-primary\"\n                                (click)=\"onPayment(training)\">Payment</button>&nbsp;&nbsp;\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onRating(training)\">Rating</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-home',\n  templateUrl: './user-home.component.html',\n  styleUrls: ['./user-home.component.css']\n})\nexport class UserHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  userName = JSON.parse(localStorage.getItem('loggedUser'))['name'];\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Welcome {{userName}} login in system!</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Notification } from 'src/app/model/notification';\n\n@Component({\n  selector: 'app-user-notifications',\n  templateUrl: './user-notifications.component.html',\n  styleUrls: ['./user-notifications.component.css']\n})\nexport class UserNotificationsComponent implements OnInit {\n  items;\n  notifications: Array<Notification> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getNotifications();\n  }\n  getNotifications() {\n    this.notifications = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/user/notifications?userId=' + userId,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let notification = new Notification();\n          notification.title = element[\"title\"];\n          notification.id = element[\"id\"];\n          notification.userId = element[\"userId\"];\n          notification.content = element[\"content\"];\n          this.notifications.push(notification);\n        });\n        this.items = this.notifications;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p> Notifications Center</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Title</th>\n                        <th>Content</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let notification of items\">\n                        <td><span>{{notification.id}}</span></td>\n                        <td><span>{{notification.title}}</span></td>\n                        <td><span>{{notification.content}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Mentor } from 'src/app/model/mentor';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Training } from 'src/app/model/training';\n\n@Component({\n  selector: 'app-user-search',\n  templateUrl: './user-search.component.html',\n  styleUrls: ['./user-search.component.css']\n})\nexport class UserSearchComponent implements OnInit {\n  items;\n  searchForm;\n  mentors: Array<Mentor> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private http: HttpClient) {\n    this.searchForm = this.formBuilder.group({\n      keyword: ''\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(searchData) {\n    this.mentors = [];\n    this.http.get('api/user/search/?keyword=' + searchData.keyword,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let mentor = new Mentor();\n          mentor.name = element[\"mentorName\"];\n          mentor.id = element[\"mentorId\"];\n          mentor.skillName = element[\"name\"];\n          mentor.technology = element[\"techName\"];\n          mentor.experience = element[\"years\"];\n          mentor.totalDelivered = element[\"totalDelivered\"];\n          mentor.techId = element[\"techId\"];\n          this.mentors.push(mentor);\n        });\n        this.items = this.mentors;\n      });\n  }\n\n  onProposal(mentor: Mentor) {\n    let training = new Training();\n    training.mentorId = mentor.id;\n    training.userId = JSON.parse(localStorage.getItem('loggedUser'))['id'];\n    training.name = mentor.skillName;\n    training.state = \"Proposed\";\n    training.ratings = 0;\n\n    this.http.post<any>('api/training/proposal',\n      training,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Your proposal has been sent to mentor for confirmation!\")\n        } else {\n          alert('Sorry,the proposal is fail!')\n        }\n      });\n\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <form [formGroup]=\"searchForm\" class=\"form-inline\" (ngSubmit)=\"onSubmit(searchForm.value)\">\n                <label for=\" keyword\">Technlogy:</label>\n                <input type=\"text\" class=\"form-control\" id=\"keyword\" required formControlName=\"keyword\">\n                <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n            </form>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Mentor</th>\n                        <th>Skill Name</th>\n                        <th>Years Of Experience</th>\n                        <th>Total Delivered</th>\n                        <th>Technology</th>\n                        <!-- <th>Fee Charged</th> -->\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of items\">\n                        <td><span>{{item.name}}</span></td>\n                        <td><span>{{item.skillName}}</span></td>\n                        <td><span>{{item.experience}}</span></td>\n                        <td><span>{{item.totalDelivered}}</span></td>\n                        <td><span>{{item.technology}}</span></td>\n                        <!-- <td><span>{{mentor.feeCharged}}</span></td> -->\n                        <td><button type=\"button\" class=\"btn btn-primary\" (click)=\"onProposal(item)\">Proposal</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","export class Payment {\n    id: number;\n    userName: string;\n    mentorName: string;\n    trainingName: string;\n    amount: number\n}\n","export class Technology {\n    id: number;\n    name: string\n}\n","export class Mentor {\n    id: number;\n    name: string;\n    skillName: string;\n    technology: string;\n    experience: number;\n    totalDelivered: number;\n    feeCharged: number;\n    techId: number;\n}\n","export class Notification {\n    id: number;\n    userId: number;\n    title: string;\n    content: string\n}\n","export class Parameter {\n    id: number;\n    perCommissionPayment: number\n}\n","export class Skill {\n    id: number;\n    name: string;\n    techId: number;\n    techName: string;\n    mentorId: number;\n    years: number;\n    totalDelivered: number\n}\n\n","export class Training {\n    id: number;\n    name: string;\n    userId: number;\n    mentorId: number;\n    mentor: string;\n    state: string;\n    ratings: number\n}\n\n","export class User {\n    id: number;\n    name: string;\n    password: string;\n    role: string;\n    status: string\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}