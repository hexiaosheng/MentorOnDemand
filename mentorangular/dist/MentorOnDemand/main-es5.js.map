{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/admin-home/admin-home.component.ts","webpack:///src/app/component/admin-home/admin-home.component.html","webpack:///src/app/component/admin-parameters/admin-parameters.component.ts","webpack:///src/app/component/admin-parameters/admin-parameters.component.html","webpack:///src/app/component/admin-payments/admin-payments.component.ts","webpack:///src/app/component/admin-payments/admin-payments.component.html","webpack:///src/app/component/admin-technologies/admin-technologies.component.ts","webpack:///src/app/component/admin-technologies/admin-technologies.component.html","webpack:///src/app/component/admin-users/admin-users.component.ts","webpack:///src/app/component/admin-users/admin-users.component.html","webpack:///src/app/component/login/login.component.ts","webpack:///src/app/component/login/login.component.html","webpack:///src/app/component/mentor-comptrainings/mentor-comptrainings.component.ts","webpack:///src/app/component/mentor-comptrainings/mentor-comptrainings.component.html","webpack:///src/app/component/mentor-curtrainings/mentor-curtrainings.component.ts","webpack:///src/app/component/mentor-curtrainings/mentor-curtrainings.component.html","webpack:///src/app/component/mentor-home/mentor-home.component.ts","webpack:///src/app/component/mentor-home/mentor-home.component.html","webpack:///src/app/component/mentor-notifications/mentor-notifications.component.ts","webpack:///src/app/component/mentor-notifications/mentor-notifications.component.html","webpack:///src/app/component/mentor-skills/mentor-skills.component.ts","webpack:///src/app/component/mentor-skills/mentor-skills.component.html","webpack:///src/app/component/user-comptrainings/user-comptrainings.component.ts","webpack:///src/app/component/user-comptrainings/user-comptrainings.component.html","webpack:///src/app/component/user-curtrainings/user-curtrainings.component.ts","webpack:///src/app/component/user-curtrainings/user-curtrainings.component.html","webpack:///src/app/component/user-home/user-home.component.ts","webpack:///src/app/component/user-home/user-home.component.html","webpack:///src/app/component/user-notifications/user-notifications.component.ts","webpack:///src/app/component/user-notifications/user-notifications.component.html","webpack:///src/app/component/user-search/user-search.component.ts","webpack:///src/app/component/user-search/user-search.component.html","webpack:///src/app/model/Payment.ts","webpack:///src/app/model/Technology.ts","webpack:///src/app/model/mentor.ts","webpack:///src/app/model/notification.ts","webpack:///src/app/model/parameter.ts","webpack:///src/app/model/skill.ts","webpack:///src/app/model/training.ts","webpack:///src/app/model/user.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","enableTracing","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AdminHomeComponent","userName","JSON","parse","localStorage","getItem","AdminParametersComponent","http","formBuilder","submitted","paras","headers","paraForm","group","commission","items","getParameters","data","para","perCommissionPayment","post","reportProgress","subscribe","res","window","alert","get","console","log","forEach","element","push","onSubmit","onUpdate","AdminPaymentsComponent","payments","getPayments","payment","trainingName","mentorName","amount","AdminTechnologiesComponent","technologies","techForm","name","getTechnologies","technology","tech","onAddTech","AdminUsersComponent","users","getUsers","user","role","status","LoginComponent","router","loginForm","password","userData","setItem","stringify","navigateByUrl","MentorComptrainingsComponent","route","trainings","getCompletedTrainings","userId","training","mentorId","ratings","state","MentorCurtrainingsComponent","getCurrentTrainings","MentorHomeComponent","MentorNotificationsComponent","notifications","getNotifications","notification","content","MentorSkillsComponent","mentors","msForm","techName","years","totalDelivered","getMentorSkills","mentor","skillName","experience","techId","skill","onAddSkill","UserComptrainingsComponent","UserCurtrainingsComponent","UserHomeComponent","UserNotificationsComponent","UserSearchComponent","searchForm","keyword","searchData","Payment","Technology","Mentor","Notification","Parameter","Skill","Training","User","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './component/login/login.component';\nimport { UserHomeComponent } from './component/user-home/user-home.component';\nimport { MentorHomeComponent } from './component/mentor-home/mentor-home.component';\nimport { UserSearchComponent } from './component/user-search/user-search.component';\nimport { UserNotificationsComponent } from './component/user-notifications/user-notifications.component';\nimport { UserCurtrainingsComponent } from './component/user-curtrainings/user-curtrainings.component';\nimport { UserComptrainingsComponent } from './component/user-comptrainings/user-comptrainings.component';\nimport { MentorNotificationsComponent } from './component/mentor-notifications/mentor-notifications.component';\nimport { MentorCurtrainingsComponent } from './component/mentor-curtrainings/mentor-curtrainings.component';\nimport { MentorComptrainingsComponent } from './component/mentor-comptrainings/mentor-comptrainings.component';\nimport { MentorSkillsComponent } from './component/mentor-skills/mentor-skills.component';\nimport { AdminHomeComponent } from './component/admin-home/admin-home.component';\nimport { AdminUsersComponent } from './component/admin-users/admin-users.component';\nimport { AdminPaymentsComponent } from './component/admin-payments/admin-payments.component';\nimport { AdminParametersComponent } from './component/admin-parameters/admin-parameters.component';\nimport { AdminTechnologiesComponent } from './component/admin-technologies/admin-technologies.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'user-home', component: UserHomeComponent },\n  { path: 'user-search', component: UserSearchComponent },\n  { path: 'user-notifications', component: UserNotificationsComponent },\n  { path: 'user-curtrainings', component: UserCurtrainingsComponent },\n  { path: 'user-comptrainings', component: UserComptrainingsComponent },\n  { path: 'mentor-home', component: MentorHomeComponent },\n  { path: 'mentor-notifications', component: MentorNotificationsComponent },\n  { path: 'mentor-curtrainings', component: MentorCurtrainingsComponent },\n  { path: 'mentor-comptrainings', component: MentorComptrainingsComponent },\n  { path: 'mentor-skills', component: MentorSkillsComponent },\n  { path: 'admin-technologies', component: AdminTechnologiesComponent },\n  { path: 'admin-users', component: AdminUsersComponent },\n  { path: 'admin-payments', component: AdminPaymentsComponent },\n  { path: 'admin-home', component: AdminHomeComponent },\n  { path: 'admin-parameters', component: AdminParametersComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { enableTracing: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Mentor On Demand';\n}\n","<!-- app.component.ts -->\n<div style=\"text-align:center\">\n  <h1>\n    Welcome to {{ title }}!\n  </h1>\n</div>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { UserHomeComponent } from './component/user-home/user-home.component';\nimport { MentorHomeComponent } from './component/mentor-home/mentor-home.component';\nimport { UserCurtrainingsComponent } from './component/user-curtrainings/user-curtrainings.component';\nimport { UserComptrainingsComponent } from './component/user-comptrainings/user-comptrainings.component';\nimport { MentorCurtrainingsComponent } from './component/mentor-curtrainings/mentor-curtrainings.component';\nimport { MentorComptrainingsComponent } from './component/mentor-comptrainings/mentor-comptrainings.component';\nimport { UserNotificationsComponent } from './component/user-notifications/user-notifications.component';\nimport { MentorNotificationsComponent } from './component/mentor-notifications/mentor-notifications.component';\nimport { MentorSkillsComponent } from './component/mentor-skills/mentor-skills.component';\nimport { UserSearchComponent } from './component/user-search/user-search.component';\nimport { AdminHomeComponent } from './component/admin-home/admin-home.component';\nimport { AdminTechnologiesComponent } from './component/admin-technologies/admin-technologies.component';\nimport { AdminUsersComponent } from './component/admin-users/admin-users.component';\nimport { AdminPaymentsComponent } from './component/admin-payments/admin-payments.component';\nimport { AdminParametersComponent } from './component/admin-parameters/admin-parameters.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserHomeComponent,\n    MentorHomeComponent,\n    UserCurtrainingsComponent,\n    UserComptrainingsComponent,\n    MentorCurtrainingsComponent,\n    MentorComptrainingsComponent,\n    UserNotificationsComponent,\n    MentorNotificationsComponent,\n    MentorSkillsComponent,\n    UserSearchComponent,\n    AdminHomeComponent,\n    AdminTechnologiesComponent,\n    AdminUsersComponent,\n    AdminPaymentsComponent,\n    AdminParametersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  userName = JSON.parse(localStorage.getItem('loggedUser'))['name'];\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Welcome {{userName}} login in system!</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Parameter } from 'src/app/model/parameter';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-parameters',\n  templateUrl: './admin-parameters.component.html',\n  styleUrls: ['./admin-parameters.component.css']\n})\nexport class AdminParametersComponent implements OnInit {\n  paraForm;\n  items;\n  submitted = true;\n  paras: Array<Parameter> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\n    this.paraForm = this.formBuilder.group({\n      commission: ''\n    });\n  }\n\n  ngOnInit(): void {\n    this.items = this.getParameters();\n  }\n\n  onSubmit(data) {\n    let para = new Parameter();\n    para.perCommissionPayment = data[\"commission\"];\n    para.id = 1;\n\n    this.http.post<any>('api/parameter/update',\n      para,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Save parameter successfully!\");\n\n          this.getParameters();\n          this.submitted = true;\n        } else {\n          alert('Sorry,save parameter fail!')\n        }\n      });\n\n    this.submitted = true;\n  }\n\n  getParameters() {\n    this.paras = [];\n    this.http.get('api/parameters',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let para = new Parameter();\n          para.id = element[\"id\"];\n          para.perCommissionPayment = element[\"perCommissionPayment\"];\n\n          this.paras.push(para);\n        });\n        this.items = this.paras;\n      });\n  }\n\n\n  onUpdate() {\n    this.submitted = false;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Parameters Management</p>\n            <div [hidden]=\"submitted\">\n                <form [formGroup]=\"paraForm\" (ngSubmit)=\"onSubmit(paraForm.value)\">\n                    <div class=\"form-group\">\n                        <label for=\"commission\">Payment Commission percentage:</label>\n                        <input class=\"form-control\" type=\"text\" id=\"commission\" formControlName=\"commission\">\n                    </div>\n                    <button class=\"btn btn-primary\" type=\"submit\">Save</button>\n                </form>\n            </div>\n            <div [hidden]=\"!submitted\">\n                <table class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Payment Commission Percentage</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let para of items\">\n                            <td><span>{{para.id}}</span></td>\n                            <td><span>{{para.perCommissionPayment}}</span></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"onUpdate()\">Update</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Payment } from 'src/app/model/Payment';\n\n@Component({\n  selector: 'app-admin-payments',\n  templateUrl: './admin-payments.component.html',\n  styleUrls: ['./admin-payments.component.css']\n})\nexport class AdminPaymentsComponent implements OnInit {\n  items;\n  payments: Array<Payment> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.items = this.getPayments();\n  }\n\n  getPayments() {\n    this.payments = [];\n    this.http.get('api/payments',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let payment = new Payment();\n          payment.userName = element[\"userName\"];\n          payment.trainingName = element[\"trainingName\"];\n          payment.mentorName = element[\"mentorName\"];\n          payment.amount = element[\"amount\"];\n          payment.id = element[\"id\"];\n\n          this.payments.push(payment);\n        });\n        this.items = this.payments;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Payments Management</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>User Name</th>\n                        <th>Mentor Name</th>\n                        <th>Training</th>\n                        <th>Amount</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let payment of items\">\n                        <td><span>{{payment.id}}</span></td>\n                        <td><span>{{payment.userName}}</span></td>\n                        <td><span>{{payment.mentorName}}</span></td>\n                        <td><span>{{payment.trainingName}}</span></td>\n                        <td><span>{{payment.amount}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Technology } from 'src/app/model/Technology';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-technologies',\n  templateUrl: './admin-technologies.component.html',\n  styleUrls: ['./admin-technologies.component.css']\n})\nexport class AdminTechnologiesComponent implements OnInit {\n  items;\n  techForm;\n  submitted = true;\n  technologies: Array<Technology> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\n    this.techForm = this.formBuilder.group({\n      name: ''\n    });\n  }\n\n  ngOnInit(): void {\n    this.items = this.getTechnologies();\n  }\n  onAddTech() {\n    this.submitted = false;\n  }\n\n  onRemoveTech(data) {\n    //window.alert(id);\n    this.http.delete<any>('api/technology/remove?techId=' + data[\"id\"],\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Remove technology successfully!\");\n\n          this.getTechnologies();\n          this.submitted = true;\n        } else {\n          alert('Sorry,remove technology fail!')\n        }\n      });\n  }\n\n  getTechnologies() {\n    this.technologies = [];\n    this.http.get('api/technologies',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let technology = new Technology();\n          technology.name = element[\"name\"];\n          technology.id = element[\"id\"];\n\n          this.technologies.push(technology);\n        });\n        this.items = this.technologies;\n      });\n  }\n\n  onSubmit(data) {\n    //console.log(data);\n    let tech = new Technology();\n    tech.name = data[\"name\"];\n\n    this.http.post<any>('api/technology/add',\n      tech,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Add technology successfully!\");\n\n          this.getTechnologies();\n          this.submitted = true;\n        } else {\n          alert('Sorry,add technology fail!')\n        }\n      });\n\n    this.submitted = true;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Technologies Management</p>\n            <div [hidden]=\"submitted\">\n                <form [formGroup]=\"techForm\" (ngSubmit)=\"onSubmit(techForm.value)\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Technology Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" required formControlName=\"name\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n            <div [hidden]=\"!submitted\">\n                <table class=\"table table-striped table-bordered table-hover\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let tech of items\">\n                            <td><span>{{tech.id}}</span></td>\n                            <td><span>{{tech.name}}</span></td>\n                            <td><button class=\"btn btn-danger\" type=\"button\"\n                                    (click)=\"onRemoveTech(tech)\">Remove</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddTech()\">Add</button>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from 'src/app/model/user';\n\n@Component({\n  selector: 'app-admin-users',\n  templateUrl: './admin-users.component.html',\n  styleUrls: ['./admin-users.component.css']\n})\nexport class AdminUsersComponent implements OnInit {\n  items\n  users: Array<User> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.items = this.getUsers();\n  }\n\n  onBlock(user) {\n    //window.alert(id);\n    this.http.post<any>('api/user/block?userId=' + user.id,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"This user has been blocked!\");\n\n          this.getUsers();\n        } else {\n          alert('Sorry,block user fail!')\n        }\n      });\n  }\n\n  onUnBlock(user: User) {\n    //window.alert(id);\n    this.http.post<any>('api/user/unblock?userId=' + user.id,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"This user has been unblocked!\");\n\n          this.getUsers();\n        } else {\n          alert('Sorry,unblock user fail!')\n        }\n      });\n  }\n\n  getUsers() {\n    this.users = [];\n    this.http.get('api/users',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let user = new User();\n          user.name = element[\"name\"];\n          user.id = element[\"id\"];\n          user.role = element[\"role\"];\n          user.status = element[\"status\"];\n          this.users.push(user);\n        });\n        this.items = this.users;\n      });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-technologies\">Technologies</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/admin-users\">Users</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-payments\">Payments</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/admin-parameters\">Parameters</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Users and Mentors Management</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Role</th>\n                        <th>Status</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of items\">\n                        <td><span>{{user.id}}</span></td>\n                        <td><span>{{user.name}}</span></td>\n                        <td><span>{{user.role}}</span></td>\n                        <td><span>{{user.status}}</span></td>\n                        <td><button class=\"btn btn-danger\" type=\"button\"\n                                (click)=\"onBlock(user)\">Block</button>&nbsp;&nbsp;\n                            <button class=\"btn btn-success\" type=\"button\" (click)=\"onUnBlock(user)\">Unblock</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/model/user';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private http: HttpClient\n  ) {\n    this.loginForm = this.formBuilder.group({\n      name: '',\n      password: ''\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n  onSubmit(userData) {\n    this.http.post<any>('api/user/login',\n      userData,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        if (res.status == 'success') {\n          localStorage.setItem('loggedUser', JSON.stringify(res.data))\n          if (res.data.role == \"admin\") {\n            this.router.navigateByUrl(\"admin-home\")\n          } else if (res.data.role == \"mentor\") {\n            this.router.navigateByUrl(\"mentor-home\")\n          } else {\n            this.router.navigateByUrl(\"user-home\")\n          }\n        } else {\n          alert('username or password is wrong')\n        }\n      });\n  }\n}\n","<div class=\"container\">\n    <h1>Sign in</h1>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n        <div class=\"form-group\">\n            <label for=\"name\">User Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" required formControlName=\"name\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"password\" required formControlName=\"password\">\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\">Sign in</button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Training } from 'src/app/model/training';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-mentor-comptrainings',\n  templateUrl: './mentor-comptrainings.component.html',\n  styleUrls: ['./mentor-comptrainings.component.css']\n})\nexport class MentorComptrainingsComponent implements OnInit {\n  items;\n  trainings: Array<Training> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getCompletedTrainings();\n  }\n\n  getCompletedTrainings() {\n    this.trainings = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/mentor/trainings?userId=' + userId + '&trainingStatus=completed',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let training = new Training();\n          training.name = element[\"name\"];\n          training.id = element[\"id\"];\n          training.mentorId = element[\"mentorId\"];\n          training.userId = element[\"userId\"];\n          training.ratings = element[\"ratings\"];\n          training.state = element[\"state\"];\n          this.trainings.push(training);\n        });\n        this.items = this.trainings;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Completed Trainings</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Training ID</th>\n                        <th>Training Name</th>\n                        <th>State</th>\n                        <th>Ratings</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let training of items\">\n                        <td><span>{{training.id}}</span></td>\n                        <td><span>{{training.name}}</span></td>\n                        <td><span>{{training.state}}</span></td>\n                        <td><span>{{training.ratings}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Training } from 'src/app/model/training';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-mentor-curtrainings',\n  templateUrl: './mentor-curtrainings.component.html',\n  styleUrls: ['./mentor-curtrainings.component.css']\n})\nexport class MentorCurtrainingsComponent implements OnInit {\n  items;\n  trainings: Array<Training> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getCurrentTrainings();\n  }\n\n  getCurrentTrainings() {\n    this.trainings = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/mentor/trainings?userId=' + userId + '&trainingStatus=progress',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let training = new Training();\n          training.name = element[\"name\"];\n          training.id = element[\"id\"];\n          training.mentorId = element[\"mentorId\"];\n          training.userId = element[\"userId\"];\n          training.ratings = element[\"ratings\"];\n          training.state = element[\"state\"];\n          this.trainings.push(training);\n        });\n        this.items = this.trainings;\n      });\n  }\n\n  onConfirm(training: Training) {\n    this.http.post<any>('api/training/confirm',\n      training,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        if (res == true) {\n          window.alert(\"The training proposal has been confirmed!\")\n        } else {\n          alert('Sorry,Confirm Proposal fail!')\n        }\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Current Trainings</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Training ID</th>\n                        <th>Training Name</th>\n                        <th>State</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let training of items\">\n                        <td><span>{{training.id}}</span></td>\n                        <td><span>{{training.name}}</span></td>\n                        <td><span>{{training.state}}</span></td>\n                        <td><button type=\"button\" class=\"btn btn-primary\" (click)=\"onConfirm(training)\">Confirm\n                                Proposal</button></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mentor-home',\n  templateUrl: './mentor-home.component.html',\n  styleUrls: ['./mentor-home.component.css']\n})\nexport class MentorHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  userName = JSON.parse(localStorage.getItem('loggedUser'))['name'];\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Welcome {{userName}} login in system!</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Notification } from 'src/app/model/notification';\n\n@Component({\n  selector: 'app-mentor-notifications',\n  templateUrl: './mentor-notifications.component.html',\n  styleUrls: ['./mentor-notifications.component.css']\n})\nexport class MentorNotificationsComponent implements OnInit {\n  items;\n  notifications: Array<Notification> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getNotifications();\n  }\n\n  getNotifications() {\n    this.notifications = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/user/notifications?userId=' + userId,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let notification = new Notification();\n          notification.title = element[\"title\"];\n          notification.id = element[\"id\"];\n          notification.userId = element[\"userId\"];\n          notification.content = element[\"content\"];\n          this.notifications.push(notification);\n        });\n        this.items = this.notifications;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Notifications Center</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Title</th>\n                        <th>Content</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let notification of items\">\n                        <td><span>{{notification.id}}</span></td>\n                        <td><span>{{notification.title}}</span></td>\n                        <td><span>{{notification.content}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Mentor } from 'src/app/model/mentor';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Training } from 'src/app/model/training';\nimport { Skill } from 'src/app/model/skill';\n\n@Component({\n  selector: 'app-mentor-skills',\n  templateUrl: './mentor-skills.component.html',\n  styleUrls: ['./mentor-skills.component.css']\n})\nexport class MentorSkillsComponent implements OnInit {\n  msForm;\n  items;\n  submitted = true;\n  mentors: Array<Mentor> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n  technologies = ['IT'];\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {\n    this.msForm = this.formBuilder.group({\n      name: '',\n      techName: '',\n      years: '',\n      totalDelivered: ''\n    });\n  }\n\n  ngOnInit(): void {\n    this.getMentorSkills();\n  }\n\n  getMentorSkills() {\n    this.mentors = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id'];\n    this.http.get('api/mentor/skills/?userId=' + userId,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let mentor = new Mentor();\n          mentor.name = element[\"mentorName\"];\n          mentor.id = element[\"mentorId\"];\n          mentor.skillName = element[\"name\"];\n          mentor.technology = element[\"techName\"];\n          mentor.experience = element[\"years\"];\n          mentor.totalDelivered = element[\"totalDelivered\"];\n          mentor.techId = element[\"techId\"];\n          this.mentors.push(mentor);\n        });\n        this.items = this.mentors;\n      });\n  }\n\n  onAddSkill() {\n    this.submitted = false;\n  }\n\n  onSubmit(data) {\n    //console.log(data);\n    let skill = new Skill();\n    skill.name = data[\"name\"];\n    skill.mentorId = JSON.parse(localStorage.getItem('loggedUser'))['id'];\n    skill.techId = 1;\n    skill.techName = data[\"techName\"];\n    skill.years = data[\"years\"];\n    skill.totalDelivered = data[\"totalDelivered\"];\n\n    this.http.post<any>('api/mentor/addskill',\n      skill,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Add skill successfully!\");\n\n          this.getMentorSkills();\n          this.submitted = true;\n        } else {\n          alert('Sorry,add skill fail!')\n        }\n      });\n\n    this.submitted = true;\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-comptrainings\">Completed Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/mentor-skills\">Edit Skills</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <div [hidden]=\"submitted\">\n                <form [formGroup]=\"msForm\" (ngSubmit)=\"onSubmit(msForm.value)\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Skill Name</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" required formControlName=\"name\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"techName\">Technology</label>\n                        <select class=\"form-control\" id=\"techName\" formControlName=\"techName\">\n                            <option *ngFor=\"let p of technologies\" [value]=\"p\">{{p}}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"years\">Years Of Experience</label>\n                        <input type=\"text\" class=\"form-control\" id=\"years\" required formControlName=\"years\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"totalDelivered\">Total Delivered</label>\n                        <input type=\"text\" class=\"form-control\" id=\"totalDelivered\" required\n                            formControlName=\"totalDelivered\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n            <div [hidden]=\"!submitted\">\n                <table class=\"table table-striped table-bordered table-hover\" *ngIf=\"items\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Technology</th>\n                            <th>Years Of Experience</th>\n                            <th>Total Delivered</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let skill of items\">\n                            <td><span>{{skill.skillName}}</span></td>\n                            <td><span>{{skill.technology}}</span></td>\n                            <td><span>{{skill.experience}}</span></td>\n                            <td><span>{{skill.totalDelivered}}</span></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button class=\"btn btn-primary\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Training } from 'src/app/model/training';\n\n@Component({\n  selector: 'app-user-comptrainings',\n  templateUrl: './user-comptrainings.component.html',\n  styleUrls: ['./user-comptrainings.component.css']\n})\nexport class UserComptrainingsComponent implements OnInit {\n  items;\n  trainings: Array<Training> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getCompletedTrainings();\n  }\n\n  getCompletedTrainings() {\n    this.trainings = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/user/trainings?userId=' + userId + '&trainingStatus=completed',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let training = new Training();\n          training.name = element[\"name\"];\n          training.id = element[\"id\"];\n          training.mentorId = element[\"mentorId\"];\n          training.ratings = element[\"ratings\"];\n          training.state = element[\"state\"];\n          this.trainings.push(training);\n        });\n        this.items = this.trainings;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Completed Trainings</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Training ID</th>\n                        <th>Training Name</th>\n                        <th>State</th>\n                        <th>Ratings</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let training of items\">\n                        <td><span>{{training.id}}</span></td>\n                        <td><span>{{training.name}}</span></td>\n                        <td><span>{{training.state}}</span></td>\n                        <td><span>{{training.ratings}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Training } from 'src/app/model/training';\n\n@Component({\n  selector: 'app-user-curtrainings',\n  templateUrl: './user-curtrainings.component.html',\n  styleUrls: ['./user-curtrainings.component.css']\n})\nexport class UserCurtrainingsComponent implements OnInit {\n  items;\n  trainings: Array<Training> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getCurrentTrainings();\n  }\n\n  getCurrentTrainings() {\n    this.trainings = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/user/trainings?userId=' + userId + '&trainingStatus=progress',\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let training = new Training();\n          training.name = element[\"name\"];\n          training.id = element[\"id\"];\n          training.mentorId = element[\"mentorId\"];\n          training.userId = element[\"userId\"];\n          training.ratings = element[\"ratings\"];\n          training.state = element[\"state\"];\n          this.trainings.push(training);\n        });\n        this.items = this.trainings;\n      });\n  }\n\n  onPayment(training: Training) {\n\n    this.http.post<any>('api/training/payment',\n      training,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        if (res == true) {\n          window.alert(\"Your payment is completed!\")\n        } else {\n          alert('Sorry,the payment is fail!')\n        }\n      });\n  }\n\n  onRating(training: Training) {\n    training.ratings = 8.8;\n\n    this.http.post<any>('api/training/rating',\n      training,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        if (res == true) {\n          window.alert(\"Thanks for rating this training!\")\n        } else {\n          alert('Sorry,the rating is fail!')\n        }\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Current Trainings</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Training ID</th>\n                        <th>Training Name</th>\n                        <th>State</th>\n                        <th>Ratings</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let training of items\">\n                        <td><span>{{training.id}}</span></td>\n                        <td><span>{{training.name}}</span></td>\n                        <td><span>{{training.state}}</span></td>\n                        <td><span>{{training.ratings}}</span></td>\n                        <td><button type=\"button\" class=\"btn btn-primary\"\n                                (click)=\"onPayment(training)\">Payment</button>&nbsp;&nbsp;\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"onRating(training)\">Rating</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-home',\n  templateUrl: './user-home.component.html',\n  styleUrls: ['./user-home.component.css']\n})\nexport class UserHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  userName = JSON.parse(localStorage.getItem('loggedUser'))['name'];\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p>Welcome {{userName}} login in system!</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Notification } from 'src/app/model/notification';\n\n@Component({\n  selector: 'app-user-notifications',\n  templateUrl: './user-notifications.component.html',\n  styleUrls: ['./user-notifications.component.css']\n})\nexport class UserNotificationsComponent implements OnInit {\n  items;\n  notifications: Array<Notification> = [];\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getNotifications();\n  }\n  getNotifications() {\n    this.notifications = [];\n    let userId = JSON.parse(localStorage.getItem('loggedUser'))['id']\n    this.http.get('api/user/notifications?userId=' + userId,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let notification = new Notification();\n          notification.title = element[\"title\"];\n          notification.id = element[\"id\"];\n          notification.userId = element[\"userId\"];\n          notification.content = element[\"content\"];\n          this.notifications.push(notification);\n        });\n        this.items = this.notifications;\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <p> Notifications Center</p>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Title</th>\n                        <th>Content</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let notification of items\">\n                        <td><span>{{notification.id}}</span></td>\n                        <td><span>{{notification.title}}</span></td>\n                        <td><span>{{notification.content}}</span></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Mentor } from 'src/app/model/mentor';\nimport { FormBuilder } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Training } from 'src/app/model/training';\n\n@Component({\n  selector: 'app-user-search',\n  templateUrl: './user-search.component.html',\n  styleUrls: ['./user-search.component.css']\n})\nexport class UserSearchComponent implements OnInit {\n  items;\n  searchForm;\n  mentors: Array<Mentor> = [];\n\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' })\n\n  constructor(private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private http: HttpClient) {\n    this.searchForm = this.formBuilder.group({\n      keyword: ''\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(searchData) {\n    this.mentors = [];\n    this.http.get('api/user/search/?keyword=' + searchData.keyword,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((data: any) => {\n        console.log(data);\n        data.forEach(element => {\n          let mentor = new Mentor();\n          mentor.name = element[\"mentorName\"];\n          mentor.id = element[\"mentorId\"];\n          mentor.skillName = element[\"name\"];\n          mentor.technology = element[\"techName\"];\n          mentor.experience = element[\"years\"];\n          mentor.totalDelivered = element[\"totalDelivered\"];\n          mentor.techId = element[\"techId\"];\n          this.mentors.push(mentor);\n        });\n        this.items = this.mentors;\n      });\n  }\n\n  onProposal(mentor: Mentor) {\n    let training = new Training();\n    training.mentorId = mentor.id;\n    training.userId = JSON.parse(localStorage.getItem('loggedUser'))['id'];\n    training.name = mentor.skillName;\n    training.state = \"Proposed\";\n    training.ratings = 0;\n\n    this.http.post<any>('api/training/proposal',\n      training,\n      { headers: this.headers, reportProgress: true })\n      .subscribe((res: any) => {\n        //alert(res);\n        if (res == true) {\n          window.alert(\"Your proposal has been sent to mentor for confirmation!\")\n        } else {\n          alert('Sorry,the proposal is fail!')\n        }\n      });\n\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-4\" style=\"background-color:lavender;\">\n            <ul class=\"nav nav-pills flex-column\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-notifications\">Notifications</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"/user-search\">Search Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-curtrainings\">Current Trainings</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"/user-comptrainings\">Completed Trainings</a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-sm-8\" style=\"background-color:lavenderblush;\">\n            <form [formGroup]=\"searchForm\" class=\"form-inline\" (ngSubmit)=\"onSubmit(searchForm.value)\">\n                <label for=\" keyword\">Technlogy:</label>\n                <input type=\"text\" class=\"form-control\" id=\"keyword\" required formControlName=\"keyword\">\n                <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n            </form>\n            <table class=\"table table-striped table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th>Mentor</th>\n                        <th>Skill Name</th>\n                        <th>Years Of Experience</th>\n                        <th>Total Delivered</th>\n                        <th>Technology</th>\n                        <!-- <th>Fee Charged</th> -->\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let item of items\">\n                        <td><span>{{item.name}}</span></td>\n                        <td><span>{{item.skillName}}</span></td>\n                        <td><span>{{item.experience}}</span></td>\n                        <td><span>{{item.totalDelivered}}</span></td>\n                        <td><span>{{item.technology}}</span></td>\n                        <!-- <td><span>{{mentor.feeCharged}}</span></td> -->\n                        <td><button type=\"button\" class=\"btn btn-primary\" (click)=\"onProposal(item)\">Proposal</button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","export class Payment {\n    id: number;\n    userName: string;\n    mentorName: string;\n    trainingName: string;\n    amount: number\n}\n","export class Technology {\n    id: number;\n    name: string\n}\n","export class Mentor {\n    id: number;\n    name: string;\n    skillName: string;\n    technology: string;\n    experience: number;\n    totalDelivered: number;\n    feeCharged: number;\n    techId: number;\n}\n","export class Notification {\n    id: number;\n    userId: number;\n    title: string;\n    content: string\n}\n","export class Parameter {\n    id: number;\n    perCommissionPayment: number\n}\n","export class Skill {\n    id: number;\n    name: string;\n    techId: number;\n    techName: string;\n    mentorId: number;\n    years: number;\n    totalDelivered: number\n}\n\n","export class Training {\n    id: number;\n    name: string;\n    userId: number;\n    mentorId: number;\n    mentor: string;\n    state: string;\n    ratings: number\n}\n\n","export class User {\n    id: number;\n    name: string;\n    password: string;\n    role: string;\n    status: string\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}